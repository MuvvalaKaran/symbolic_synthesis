root@7f59ed92a164:~# /usr/bin/python3 /root/symbolic_planning/src/main.py
Exp Setup: b0 - A, b1 - A, b2 - I, b3 - R, b4 - A 


loc: l0; l1; l2; l3
Human_locs: l6; l7; l8

Initially A; A; I are placed in 'else' location; A - l3 and R - l8

XXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXX
XX|A|X|A|XXXXXXX|_|XXXXXX (vertical loc Top to Bottom l0; l1; l2)
XXX|I|XXXXXXXXXX|R|XXXXXX
XXXXXXXXXXXXXXXX|_|XXXXXX
XXXX|A|_|_|R|XLX|_|XBXXXX (locs from left to right l3; l6; l7;l8; l2)
XXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXX

Formula: 'F((p42 & p21 & p10) | (p03 & p18 & p27 & p36 & p42))'



**********************************************************************************************************
************************************** Iteration: 0********************************************
**********************************************************************************************************
No. of times the human can intervene is : 0
******************# of boolean Vars for Human actions: 4******************
******************# of boolean Vars for Robot actions: 4******************
******************# of boolean Vars for DFA state: 1******************
******************# of boolean Vars for TS lbls: 20******************
******************# of boolean Vars for Robot Conf: 5******************
Time took for constructing the abstraction:  160.57101225852966
******************# of Edges in Franka Abstraction: 496507******************
Time for Constructing the LTLF DFA:  0.0028922557830810547
**********************************************************************************************************
******************************************** TR: Monolithic ***********************************************
**********************************************************************************************************
******************Computing Min-Max (aVal) on the original graph******************
**************************Reached a Fixed Point in 29 layers**************************
A Winning Strategy Exists!!. The Min Energy is 21.0
Time for solving the Adv. game on Original Graph:  881.5659885406494
Init State: ['(on b2 else)', '(on b0 l3)', '(on b3 l8)', '(on b1 else)', '(on b4 else)']
Step 0: Conf: ['(ready else)', '(on b2 else)', '(on b0 l3)', '(on b3 l8)', '(on b1 else)', '(on b4 else)'] Act: transit b4
Human Moved: New Conf. ['(to-obj b4)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 else)']
Step 1: Conf: ['(to-obj b4)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 else)'] Act: grasp
Step 2: Conf: ['(holding else)', '(on b4 ee)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)'] Act: transfer l2
Step 3: Conf: ['(holding l2)', '(on b4 ee)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)'] Act: release
Step 4: Conf: ['(ready l2)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)'] Act: transit b2
Step 5: Conf: ['(to-obj b2)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)'] Act: grasp
Step 6: Conf: ['(holding else)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 ee)'] Act: transfer l7
Step 7: Conf: ['(holding l7)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 ee)'] Act: release
Step 8: Conf: ['(ready l7)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 l7)'] Act: transit b1
Step 9: Conf: ['(to-obj b1)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 l7)'] Act: grasp
Step 10: Conf: ['(holding else)', '(on b3 l6)', '(on b0 l3)', '(on b4 l2)', '(on b1 ee)', '(on b2 l7)'] Act: transfer l8
Step 11: Conf: ['(holding l8)', '(on b3 l6)', '(on b0 l3)', '(on b4 l2)', '(on b1 ee)', '(on b2 l7)'] Act: release
************************** Energy Budget: 27 **************************
# of States in the Original graph: 90369
******************Constructing Graph of utility******************
Time took for constructing the Sym TR for Graph of Utility:  0.5579531192779541
Done Computing the Graph of Utility! Accepting Leaf nodes 43; Total states 205658
Utility values at the leaf nodes are {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}
Time took for constructing Reachable states on Graph of Utility:  48.12577295303345
******************Computing cVals on Graph of utility******************
**************************Reached a Fixed Point in 16 layers**************************
A Winning Strategy Exists!!. The Min Energy is 16.0
Time took for computing cVals is:  154.69627857208252
******************Computing BA Vals on Graph of utility******************
Time took for computing the set of best alternatives:  1044.0462520122528
******************Constructing Graph of Best Response******************
Done Computing the Graph of Best Response! Accepting Leaf nodes 43; Total states 205658; Total edges 1033131
Regret values at the leaf nodes are {0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0}
Time took for costructing the Graph of Best Response:  304.674608707428
******************Computing Regret Minimizing strategies on Graph of Best Response******************
**************************Reached a Fixed Point in 19 layers**************************
A Winning Strategy Exists!!. The Min Regret value is 5.0
Time took for computing min-max strs on the Graph of best Response:  8.06935739517212
Init State: ['(on b2 else)', '(on b0 l3)', '(on b3 l8)', '(on b1 else)', '(on b4 else)']
[0] transit b1: reg val: inf
[1] transit b2: reg val: inf
[2] transit b4: reg val: 5.0
[3] transit b3: reg val: 5.0
[4] transit b0: reg val: inf
Enter Next action id: 2
Step 0
[(['(ready else)', '(on b2 else)', '(on b0 l3)', '(on b3 l8)', '(on b1 else)', '(on b4 else)'], 1), 0, inf]: 5.0
Act: transit b4
===================================================================================
[0] human-move b3 l8 l7
[1] human-move b3 l8 l6
[2] r
===================================================================================
Enter Next state id: 1
[0] grasp: reg val: 2.0
Enter Next action id: 0
Step 1
[(['(to-obj b4)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 else)'], 1), 1, 16.0]: 2.0
Act: grasp
[0] transfer l1: reg val: 5.0
[1] transfer l0: reg val: 5.0
[2] transfer l7: reg val: 3.0
[3] transfer l8: reg val: 3.0
[4] transfer l2: reg val: 2.0
Enter Next action id: 4
Step 2
[(['(holding else)', '(on b4 ee)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)'], 1), 2, 16.0]: 2.0
Act: transfer l2
[0] transfer l1: reg val: 8.0
[1] release: reg val: 2.0
[2] transfer l0: reg val: 8.0
[3] transfer l7: reg val: 6.0
[4] transfer l8: reg val: 6.0
Enter Next action id: 1
Step 3
[(['(holding l2)', '(on b4 ee)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)'], 1), 5, 16.0]: 2.0
Act: release
[0] transit b1: reg val: inf
[1] transit b2: reg val: 2.0
[2] transit b4: reg val: 11.0
[3] transit b3: reg val: 3.0
[4] transit b0: reg val: 11.0
Enter Next action id: 1
Step 4
[(['(ready l2)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)'], 1), 8, 16.0]: 2.0
Act: transit b2
[0] grasp: reg val: 2.0
Enter Next action id: 0
Step 5
[(['(to-obj b2)', '(on b3 l6)', '(on b2 else)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)'], 1), 11, 16.0]: 2.0
Act: grasp
[0] transfer l1: reg val: 5.0
[1] transfer l8: reg val: 3.0
[2] transfer l7: reg val: 2.0
[3] transfer l0: reg val: 5.0
Enter Next action id: 2
Step 6
[(['(holding else)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 ee)'], 1), 12, 16.0]: 2.0
Act: transfer l7
[0] transfer l1: reg val: 6.0
[1] transfer l8: reg val: 4.0
[2] transfer l0: reg val: 6.0
[3] release: reg val: 2.0
Enter Next action id: 3
Step 7
[(['(holding l7)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 ee)'], 1), 13, 16.0]: 2.0
Act: release
[0] transit b1: reg val: 2.0
[1] transit b2: reg val: 5.0
[2] transit b4: reg val: inf
[3] transit b3: reg val: 5.0
[4] transit b0: reg val: inf
Enter Next action id: 0
Step 8
[(['(ready l7)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 l7)'], 1), 14, 16.0]: 2.0
Act: transit b1
[0] grasp: reg val: 2.0
Enter Next action id: 0
Step 9
[(['(to-obj b1)', '(on b3 l6)', '(on b0 l3)', '(on b1 else)', '(on b4 l2)', '(on b2 l7)'], 1), 15, 16.0]: 2.0
Act: grasp
[0] transfer l1: reg val: 5.0
[1] transfer l8: reg val: 2.0
[2] transfer l0: reg val: 5.0
Enter Next action id: 1
Step 10
[(['(holding else)', '(on b3 l6)', '(on b0 l3)', '(on b4 l2)', '(on b1 ee)', '(on b2 l7)'], 1), 16, 16.0]: 2.0
Act: transfer l8
[0] transfer l1: reg val: 6.0
[1] release: reg val: 2.0
[2] transfer l0: reg val: 6.0
Enter Next action id: 1
Step 11
[(['(holding l8)', '(on b3 l6)', '(on b0 l3)', '(on b4 l2)', '(on b1 ee)', '(on b2 l7)'], 1), 17, 16.0]: 2.0
Act: release
Done Rolling out.
****************** # Total Boolean Variables: 43 ******************
Memory in use (MB): 961.504744